{"version":3,"sources":["modules/CityComponent.js","modules/WeatherComponent.js","App.js","index.js"],"names":["Weatherlogo","styled","img","Choosecity","span","Inputbox","form","CityComponent","setCity","fetchWeather","src","onSubmit","onChange","e","target","value","placeholder","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","WeatherCondition","div","Condition","Location","WeatherinfoLabel","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","props","name","WeatherComponent","timestamp","weather","isday","icon","includes","Math","floor","main","temp","description","sys","country","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","city","setWeather","a","preventDefault","axios","get","response","console","log","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89bfffcc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Weatherlogo = styled.img`\r\nwidth: 140px;\r\nhiegth: 140px;\r\nmargin: 20px auto;\r\n`;\r\nconst Choosecity = styled.span`\r\nfont-size : 20px;\r\nfont-family: Montserrat;\r\npadding: 5px;\r\nmargin: 10px auto; \r\n`;\r\nconst Inputbox = styled.form`\r\ndisplay: flex;\r\nflex-direction : row;\r\nborder: 1px solid black;\r\nfont-size: 20px;\r\nborder-radius:2px;\r\nmargin: 25px;\r\nmargin-bottom: 35px;\r\n& input{\r\n    padding:10px;\r\n    font-size:15px;\r\n    border:none;\r\n    outline:none;\r\n}\r\n& button{ \r\n    padding:10px;\r\n    font-size: 15px;\r\n    border: none;\r\n    outline none;\r\n    color: white;\r\n    background: black;\r\n    margin-right: -1px;\r\n    cursor: pointer;\r\n}\r\n\r\n`;\r\n\r\n\r\nconst CityComponent =({setCity ,fetchWeather})=>{\r\n    return(\r\n        <>\r\n        <Weatherlogo src=\"/icons/mainlogo.png\"></Weatherlogo>\r\n        <Choosecity>enter your city</Choosecity>\r\n        <Inputbox onSubmit={fetchWeather}>\r\n            <input onChange={(e)=>{setCity(e.target.value)}} placeholder=\"enter your city name\"></input>\r\n            <button type=\"submit\">Search</button>\r\n        </Inputbox>\r\n        </>\r\n    );\r\n};\r\nexport default CityComponent;","import { getNodeText } from \"@testing-library/react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WeatherInfoIcons = {\r\nsunset : \"/icons/sunset.png\",\r\nsunrise : \"/icons/sunrise.png\",\r\nhumidity: \"/icons/humidity.png\",\r\nwind : \"/icons/wind.png\",\r\npressure : \"/icons/pressure.png\"\r\n};\r\n\r\nconst WeatherCondition = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items : center;\r\njustify-content : space-between;\r\nwidth: 100%;\r\nmargin: 30px auto;\r\n\r\n`;\r\nconst Weatherlogo=styled.img`\r\nheight: 100px;\r\nwidth: 100px;\r\nmargin:5px auto;`;\r\nconst Condition= styled.span`\r\nmargin: 20px auto;\r\nfont-size: 15px;\r\n& span {\r\n    font-size: 35px;\r\n\r\n}\r\n`;\r\nconst Location  = styled.span`\r\nfont-size: 27px;\r\nfont-weight: 400;`;\r\nconst WeatherinfoLabel = styled.span`\r\nfont-size : 15px;\r\nmargin: 20px;\r\nfont-weight: 350;\r\ntext-align : start;\r\nwidth :90%;\r\n`;\r\nconst WeatherInfoContainer = styled.div`\r\n    margin: 5px;\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    flex-direction : row;\r\n    justify-content:space-evenly;\r\n    align-items : center;\r\n    flex-wrap : wrap;\r\n    flex-basis: 50%;\r\n\r\n`;\r\nconst InfoContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction : row;\r\nwidth: 33%;\r\nmargin: 5px 10px;\r\nalign-items:center;\r\njustify-content : space-evenly;\r\n`;\r\n\r\nconst InfoIcon = styled.img`\r\nwidth:35px;\r\nmargin: 5px;\r\nheight: 35px;`\r\n\r\nconst InfoLabel = styled.span`\r\ndisplay:flex;\r\nfont-weight: 350;\r\nflex-direction: column;\r\nmargin: 5px;\r\nfont-size: 15px;\r\n`;\r\nconst WeatherInfoComponent=(props)=>{\r\n    const {name , value} = props;\r\n    \r\n    return(\r\n        <InfoContainer>\r\n            <InfoIcon src={WeatherInfoIcons[name]}/>\r\n            <InfoLabel>\r\n                {value}\r\n                <span>{name}</span>\r\n            </InfoLabel>\r\n        </InfoContainer>\r\n    );\r\n};\r\nconst WeatherComponent = ({weather}) =>{\r\n    const isday = weather?.weather[0].icon?.includes(\"d\");\r\n    const getTime = (timestamp) =>{\r\n        return `${new Date(timestamp*1000).getHours()}:${new Date(timestamp*1000).getMinutes()}`\r\n    }\r\n    return(\r\n        <>\r\n        <WeatherCondition>\r\n            <Condition><span>{Math.floor(weather.main.temp) -273} Â°C</span> | {weather?.weather[0].description}</Condition>\r\n            <Weatherlogo src=\"/icons/weatherlogo.png\"></Weatherlogo>\r\n        </WeatherCondition>\r\n        <Location>{`${weather.name}, ${weather.sys.country}`}</Location>\r\n        <WeatherinfoLabel>   Weather info</WeatherinfoLabel>\r\n        <WeatherInfoContainer>\r\n            <WeatherInfoComponent name={isday?\"sunset\":\"sunrise\"} value={getTime(weather?.sys[isday?\"sunset\":\"sunrise\"])}/>\r\n            <WeatherInfoComponent name=\"humidity\" value={weather?.main?.humidity}/>\r\n            <WeatherInfoComponent name=\"wind\" value={weather?.wind?.speed}/>\r\n            <WeatherInfoComponent name = \"pressure\" value={weather.main.pressure} />\r\n        </WeatherInfoContainer>\r\n        </> \r\n    );\r\n};\r\nexport default WeatherComponent;","import styled from 'styled-components';\nimport CityComponent from './modules/CityComponent';\nimport WeatherComponent from './modules/WeatherComponent';\nimport axios from 'axios';\nimport React,{useState} from 'react';\n\nconst Container = styled.div`\ndisplay:flex;\nflex-direction: column;\nmargin:auto;\nalign-items: center;\nbox-shadow: 0 3px 6px 0 #555;\nborder-radius: 10px;\nwidth: 350px;\nbackground:white; \n`;\n\nconst AppLabel  =styled.span`\nmargin-top: 20px;\ncolor : black;\nfont-size : 23px;\nfont-weight : 450;\nfont-family: Montserrat;\npadding: 8px;\nborder: 1px solid black;\nborder-radius: 5px`;\n\nfunction App() {\n  const [city ,setCity]  =useState();\n  const [weather  ,setWeather] = useState();\n  const fetchWeather = async (e) =>{\n    e.preventDefault();\n   const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=62a63c6492c0f01e3b026daaf969031c`);\n   console.log(response);\n   setWeather(response.data);\n  }\n  return (\n    <Container>\n      <AppLabel> React based weather app</AppLabel>\n      {weather?<WeatherComponent weather={weather} />:<CityComponent setCity ={setCity}  fetchWeather={fetchWeather}/>}\n       \n    </Container>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}